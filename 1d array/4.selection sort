Selection sort is a simple sorting algorithm. This sorting algorithm is an in-place comparison-based algorithm in which the list is 
divided into two parts, the sorted part at the left end and the unsorted part at the right end. Initially, the sorted part is empty and 
the unsorted part is the entire list.

The smallest element is selected from the unsorted array and swapped with the leftmost element, and that element becomes a part of the
sorted array. This process continues moving unsorted array boundary by one element to the right.

1 swapping in each iteration
No of swapping is less than bubble sort



select the minimum element and bring it at begining



JAVA CODE

private static void selectionSort(int[] a,int n){
      int temp;
      for(int i=0;i<n-1;i++){
          int minIndex=i;
          for(int j =i;j<n;j++){
              if(a[minIndex]>a[j]){
                  minIndex=j;
              }
          }
          temp=a[minIndex];
          a[minIndex]=a[i];
          a[i]=temp;
      }
  }

    public static void main(String[] args) {
        int[] a={7,2,3,2,4};
        int n = a.length;
        selectionSort(a,n);
        for(int i =0;i<n;i++){
            System.out.print(a[i]+" ");
        }
    }
}
