//O(n)
class Solution {
     public void inorder(List<Integer> list,TreeNode root){
        if(root==null)return;
        inorder(list,root.left);
        list.add(root.val);
        inorder(list,root.right);
    }
    public TreeNode helper(List<Integer> list,int s,int e){
        if(s>e)return null;
        if(s==e)return new TreeNode(list.get(s));
        int mid=(s+e)/2;
        TreeNode root= new TreeNode(list.get(mid));
        root.left=helper(list,s,mid-1);
        root.right=helper(list,mid+1,e);
        return root;
    }
    public  TreeNode balanceBST(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        inorder(list,root);
        
        TreeNode node= helper(list,0,list.size()-1);
        return node;
        
    }
}
