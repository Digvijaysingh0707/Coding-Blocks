// first move n-1 disk from A to B(helper)
// Move Last disk from A(Source) to C(destination)
// Move n-1 disks from B to C

No. of steps=2^n-1

//C++ code
#include <iostream>

using namespace std;
void towerOfHanoi(int n,char src,char dest,char help){

    if(n==0){
        return;
    }
    towerOfHanoi(n-1,src,help,dest);
    cout<<"Move "<<n<<" from "<<src<<" to "<<dest<<endl;
    towerOfHanoi(n-1,help,dest,src);

}
int main(){
    int n;
    cin>>n;
    towerOfHanoi(n,'A','C','B');


    return 0;
}


// Java code
static void towerOfHanoi(int n,char src,char dest,char help){
        
        //Base case
        if(n==0){
            return;
        }
        //Moving n-1 disk from src to help
        towerOfHanoi(n-1,src,help,dest);
        System.out.println("Move "+n+" from "+src+" to "+dest);
        towerOfHanoi(n-1,help,dest,src);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the value of n: ");
                int n = sc.nextInt();
                towerOfHanoi(n,'A','C','B');


    }



    }
