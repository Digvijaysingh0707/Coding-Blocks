import java.util.List;
import java.util.Stack;


 class LinkedList {
    static void transfer(Stack<Integer> s1,Stack<Integer> s2,int n){
        for(int i=0;i<n;i++){
            s2.push(s1.peek());
            s1.pop();
        }
    }
    static void  reverseStack(Stack<Integer> s1){
    //Helper stack
        Stack<Integer>  s2 = new Stack();
        int n =s1.size();
        for(int i =0;i<n;i++){
        //pick the element at top and insert it at the bottom
            int x =s1.peek();
            s1.pop();
            transfer(s1,s2,n-i-1);
            s1.push(x);
            transfer(s2,s1,n-i-1);
        }
    }


    public static void main(String[] args) {
        Stack<Integer> s = new Stack();
        s.push(1);
        s.push(2);
        s.push(3);
        s.push(4);
        reverseStack(s);
        while(s.isEmpty()==false){
            System.out.print(s.peek()+" ");
            s.pop();
        }

    }
}
