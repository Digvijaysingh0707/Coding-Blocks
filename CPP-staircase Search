Searching an element in a 2D array and array is sorted along the row and coloumn

complexity is O(M+N)



#include <iostream>
#include <bits/stdc++.h>

using namespace std;
    int search(int mat[4][4],int n,int x){
    if(n==0)
        return -1;
        int smallest = mat[0][0],largest = mat[n-1][n-1];
        if(x<smallest||x>largest)
            return -1;

        int i =0,j=n-1;
        while(i<n&&j>=0){
            if(mat[i][j]==x){
                cout<< "n found at " << i << "," <<j;
                return 1;
            }
            if(mat[i][j]>x)
                j--;
            else
                i++;
        }
        cout << "n not found";
        return 0;
    }
    int main(){
        int mat[4][4] = { { 10, 20, 30, 40 },
                      { 15, 25, 35, 45 },
                      { 27, 29, 37, 48 },
                      { 32, 33, 39, 50 } };
    search(mat, 4, 48);

    return 0;
    }
    
    
    // Java 
     private static void Search(int[][] mat, int n, int x) {
        int i = 0, j = n - 1;

        while (i < n && j >= 0) {
            if (mat[i][j] == x) {
                System.out.println("Element found at " + i + " , " + j);
                return;
            }
            if (mat[i][j] > x) {
                j--;

            } else {
                i++;
            }
        }
        System.out.println("Element not found");
        return;
    }


    public static void main(String[] args) {
        int[][] mat = {{10,20,30,40},
                {15,25,35,45},
                {27,29,39,49}};
        Search(mat,3,29);
    }
}

    

