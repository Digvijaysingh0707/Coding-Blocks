//A number can have atmost [log(N)+1] bits

public class bit {
//First Method TC:- O(log(n))
static int countBits(int n){
    int ans=0;
    while (n>0){
        ans+=(n&1);
        n=(n>>1);
    }
    return ans;
}
//Second Method TC:- O(no. of bits) in best case and in worst case O(logn) as number can have logn bits in worst case
static int countBitsFast(int n){
    int ans=0;
    while (n>0){
        n=n&(n-1);
        ans++;
    }
    return ans;
}

//Inbuilt Method
Integer.bitCount(n)

    public static void main(String[] args) {

        System.out.println(countBitsFast(13));
    }
}
