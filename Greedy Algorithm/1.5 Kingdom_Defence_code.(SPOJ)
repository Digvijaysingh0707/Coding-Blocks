  //Area lying between two consecutive towers will be the undefended area so find the distances between two consecutive towers
  //Sort the x and y coordintes
  
  public class Main {
 public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
           int t;
           int w,n,h;
           t=sc.nextInt();//no of test cases
           int x[]= new int[40000];
        int y[]= new int[40000];
        int dx=Integer.MIN_VALUE;
        int dy=Integer.MIN_VALUE;
        while (t!=0) {
            t--;
            w = sc.nextInt();//size of grid
            h = sc.nextInt();//size of grid
            n = sc.nextInt();//no of towers
            for (int i = 0; i < n; i++) {
                x[i] = sc.nextInt();//x and y denotes coordinates of tower
                y[i] = sc.nextInt();
            }
            Arrays.sort(x,0,n);
            Arrays.sort(y,0,n);
            dx = x[0] - 1;
            dy = y[0] - 1;
            for (int i = 1; i < n; i++) {
                dx = Math.max(dx, (x[i] - x[i - 1] - 1));
                dy = Math.max(dy, (y[i] - y[i - 1] - 1));
            }
            //corner case(last tower to grid end)
            dx = Math.max(dx, (w - x[n - 1]));
            dy = Math.max(dy, (h - y[n - 1]));
            System.out.print(dx * dy);
        }








    }
            }
