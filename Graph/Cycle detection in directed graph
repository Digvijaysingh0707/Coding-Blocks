class Solution {
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean vis[]= new boolean[V];
        boolean stack[]= new boolean[V];
        for(int i=0;i<V;i++){
            if(helper(i,vis,stack,adj))return true;
            }
        return false;
        
    }
    public boolean helper(int i,boolean vis[],boolean stack[],ArrayList<ArrayList<Integer>> adj){
    
        if(stack[i])return true;//if i is present in the path
        if(vis[i])return false;//if i is already visited
        vis[i]=true;
        stack[i]=true;
        List<Integer> child=adj.get(i);
        for(Integer c:child){
            if(helper(c,vis,stack,adj))return true;
        }
        
        stack[i]=false;
        return false;
    }
}
