import java.util.List;

public class LinkedList {
    private Listnode head;//Head node to hold the list


    private class Listnode {
        private int data;
        private Listnode next;

        //constructor
        private Listnode(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public void insertAtBegining(int data) {
        Listnode newNode = new Listnode(data);

        newNode.next = head;
        head = newNode;

    }

    public void display() {
        if (head == null) {
            return;
        }
        Listnode current = head;

        while (current != null) {
            System.out.print(current.data + "--> ");
            current = current.next;
        }
        System.out.print(current);//this will print null at the end

    }
    public boolean containsLoops(){
        Listnode slwPtr = head;
        Listnode fstPtr = head;
        while (fstPtr!=null && fstPtr.next!=null){
            fstPtr = fstPtr.next.next;
            slwPtr= slwPtr.next;
            if (slwPtr == fstPtr){
                return true;
            }
        }
        return false;
    }
    public void Loop(){

        Listnode first = new Listnode(2);
        Listnode second = new Listnode(3);
        Listnode third = new Listnode(4);
        Listnode fourth = new Listnode(5);
        Listnode fifth = new Listnode(6);
        head=first;
        first.next=second;
        second.next=third;
        third.next=fourth;
        fourth.next=fifth;
        fifth.next=third;
    }



    public static void main(String[] args){


        LinkedList node= new LinkedList();

        node.Loop();
        System.out.println(node.containsLoops());












       

    }
}









