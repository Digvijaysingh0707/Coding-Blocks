Time and space :-O(n)
package DP;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Scanner;

public class TopDownFibonacci {
    static int fib(int n,int dp[]){
        if (n==0||n==1){
            return n;
        }
        if (dp[n]!=0){
            return dp[n];
        }
        int ans=fib(n-1,dp)+fib(n-2,dp);
        dp[n]=ans;
        return ans;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int dp[]= new int[1000];
        int n=sc.nextInt();
        Arrays.fill(dp,0);
        System.out.println(fib(n,dp));

    }
}
