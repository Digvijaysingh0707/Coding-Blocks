https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
//time-O(n)
//space-O(1)
class Solution {
    public int maxProfit(int[] prices) {
        int max=0;
        int min=Integer.MAX_VALUE;
        for(int i=0;i<prices.length;i++){
            if(prices[i]<min){
                min=prices[i];
            }
            else{
                max=Math.max(max,prices[i]-min);
            }
        }
        return max;
        
    }
}

//O(n^2)

class Solution {
    public int maxProfit(int[] prices) {
       int max=0;
        for(int i=0;i<prices.length-1;i++){
            for(int j=i+1;j<prices.length;j++){
                int profit=prices[j]-prices[i];
                if(profit>max)max=profit;
            }
        }
        return max;
}
}
