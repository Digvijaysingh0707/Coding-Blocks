package DP;

import java.util.Arrays;
import java.util.Scanner;

public class MaxSubarraySum {
    //Bottom up approach
    static int maxSum(int a[],int n){
        int dp[]= new int[100];
        Arrays.fill(dp,0);
        dp[0]=a[0]>0?a[0]:0;
        int max_so_far=dp[0];
        //Linear time O(n)

        for (int i=1;i<n;i++){
            dp[i]=dp[i-1]+a[i];
            if (dp[i]<0)dp[i]=0;
            max_so_far=Math.max(dp[i],max_so_far);
        }
        return max_so_far;

    }
    public static void main(String[] args) {

        Scanner sc= new Scanner(System.in);
        int a[]= {-3,2,5,-1,6,3,-2,7,-5,2};
        int n=a.length;
        System.out.println(maxSum(a,n));
    }
}
