public long count(int S[], int m, int n)
    {
        long dp[][]= new long[m+1][n+1];
        for (int i=0;i<=m;i++){
            for (int j=0;j<=n;j++){
                if (j==0){
                    dp[i][j]=1;
                }
            }
        }
        for (int i=1;i<=m;i++){
            for (int j=1;j<=n;j++){
                if (S[i-1]<=j){
                    dp[i][j]=dp[i-1][j]+dp[i][j-S[i-1]];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[m][n];

    }
_______________________________________________________________
//Recursive
static int count(int a[],int amount,int n){
        if (amount==0)return 1;
        if (amount<0)return 0;
        if (n<=0&&amount>0)return 0;
        return count(a,amount-a[n-1],n)+count(a,amount,n-1);
    }
