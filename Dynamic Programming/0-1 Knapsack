 static int knapSack(int W, int wt[], int val[], int n)
    { int dp[][]= new int[n+1][W+1];
        for (int i=0;i<=W;i++){
            dp[0][i]=0;
        }
        for (int i=0;i<=n;i++){
            dp[i][0]=0;
        }
        for (int i=1;i<=n;i++){
            for (int j=1;j<=W;j++){
                int exclude=dp[i-1][j];
                int include=0;
                int weight=wt[i-1];
                if (j>=weight){
                    include=val[i-1];
                    int remaining=j-weight;
                    include+=dp[i-1][remaining];
                }
                dp[i][j]=Math.max(include,exclude);
            }
        }
        return dp[n][W];

    }
