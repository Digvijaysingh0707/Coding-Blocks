class Solution {
    public int minFallingPathSum(int[][] A) {
        int n=A.length;
        int m=A[0].length;
        int dp[][]= new int[n][m];
        for(int i=0;i<m;i++){
            dp[n-1][i]=A[n-1][i];
        }
        for(int i=n-2;i>=0;i--){
            for(int j=0;j<m;j++){
                dp[i][j]=A[i][j];
                int min=dp[i+1][j];
                if(j+1<m){
                    min=Math.min(min,dp[i+1][j+1]);
                }
                if(j-1>=0){
                    min=Math.min(min,dp[i+1][j-1]);
                }
                dp[i][j]+=min;
            }
        }
        int ans=Integer.MAX_VALUE;
        for(int i=0;i<m;i++){
            ans=Math.min(ans,dp[0][i]);
        }
        return ans;
        
    }
}
