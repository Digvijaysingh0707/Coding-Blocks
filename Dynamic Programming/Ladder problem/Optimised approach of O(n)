package DP;

import java.util.Arrays;
import java.util.Scanner;

public class LadderProblem {
    
    //Optimised approach
    static int ladder_optimised(int n,int k){
        int dp[]= new int[100];
        Arrays.fill(dp,0);
        dp[0]=dp[1]=1;
        for (int i=2;i<=n;i++){
            if (i<=k){
                dp[i]=2*dp[i-1];
            }
            if (i>k)
                dp[i]=2*dp[i-1]-dp[i-k-1];
        }
        for (int i=0;i<=n;i++){
            System.out.print(dp[i]+" ");
        }
        return dp[n];

    }

    public static void main(String[] args) {
        Scanner s= new Scanner(System.in);
        int n=s.nextInt();
        int k=s.nextInt();

        System.out.println(ladder_optimised(n,k));
    }
}
