package Recursion;

import java.util.Scanner;

public class FirstOccurence {
    static int first(int a[],int j,int n,int key){
        j=0;
        if (n==0) return -1;
        if (a[0]==key)return 0;//if key is present at the starting

        int i=first(a,j+1,n-1,key);if key is not present in first then check on the remanining part
        if (i==-1)return -1;//(n-1) part does not contain key 
        return i+1;
    }
    //Another approach of linear search using recursion
    static int fir(int a[],int i,int n,int key){
        if (i==n)return -1;
        if (a[i]==key){
            return i;
        }
        return fir(a,i+1,n,key);
    }
    public static void main(String[] args) {
        int a[]={1,2,3,7,4,5,6,7,10};
        int key=7;
        int i=0;
        int n=a.length;
        System.out.println(first(a,i,n,key));

    }
}
