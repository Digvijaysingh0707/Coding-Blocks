package Recursion;

public class AllOccurence {
    
    //this is approach 1
    static void allOccur(int a[],int i,int n,int key){ here n is the ending index
        if (i==n)return; //we have reached to the end
        if (a[i]==key) System.out.println(i+" ");
        allOccur(a,i+1,n,key);
    }
    
    //Approach 2
    static int storeOccur(int a[],int i,int n,int out[],int j,int key){// j tells the count of occurence of key stored in output array or we can say it is the index of output array
        if (i==n)return j;//when we reached the end of array "a" then we have to give j which tells the no of element present in the out array
        if (a[i]==key) {
            out[j]=i;
            //increment j
            return storeOccur(a, i + 1, n, out, j + 1, key);
        }
        //do not change j
        // this step when we have not found the key at index i
        return storeOccur(a,i+1,n,out,j,key);
    }

    public static void main(String[] args) {
        int a[]={1,2,3,4,5,3,3};
        int key=3;
        int n=a.length;
        allOccur(a,0,n,key);
        System.out.println();
        int out[]= new int[100];
        int cnt=storeOccur(a,0,n,out,0,key);
        for (int i=0;i<cnt;i++){
            System.out.print(out[i]+" ");
        }
    }
}
