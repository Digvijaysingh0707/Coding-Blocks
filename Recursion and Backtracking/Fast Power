import java.net.Socket;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Node {
    int key;
    Node left,right;
    public Node(int item){
        this.key=item;
        left=right=null;

    }
}

class  BinaryTree{
   static Node root;





   
    //It takes b steps
    static int power(int a,int b){
        if(b==0){
            return 1;
        }
        return a*power(a,b-1);
    }
    it takes log b steps
    static int fastPower(int a,int b){
        if(b==0){
            return 1;
        }
        int smallAns=fastPower(a,b/2);
        smallAns*=smallAns;
        if((b&1)==0){
            return smallAns;

        }
        else{
            return a*smallAns;

        }

    }



    public static void main(String[] args) {
       
        
        int a =3;
        int b =3;
        System.out.print(fastPower(a,b));







    }
}
